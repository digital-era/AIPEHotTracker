# .github/workflows/schedule_data_refresh.yml

name: Scheduled Data Refresh

on:
  schedule:
    # 北京时间(UTC+8) 周一到周五 9:30 - 15:00，每半小时一次
    # 转换为 UTC 时间 (UTC+0)
    - cron: '30 1 * * 1-5'    # BJT 09:30 -> UTC 01:30
    - cron: '0,30 2-6 * * 1-5' # BJT 10:00-14:30 -> UTC 02:00-06:30
    - cron: '0 7 * * 1-5'      # BJT 15:00 -> UTC 07:00
    
  # 允许手动触发，方便测试
  workflow_dispatch:

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        # 步骤1: 检出你的代码
        uses: actions/checkout@v4

      - name: Set up Python
        # 步骤2: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # 指定 Python 版本

      - name: Install dependencies
        # 步骤3: 安装脚本需要的库
        run: |
          python -m pip install --upgrade pip
          pip install pandas akshare requests

      - name: Run data fetching script
        # 步骤4: 运行你的 Python 脚本
        run: python api/index.py

      - name: Commit and push if changed
        # 步骤5: 将生成的文件提交回仓库
        run: |
          # 配置 Git 用户信息
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 将 data 目录下的所有变动添加到暂存区
          git add data/
          
          # 检查是否有文件变动。如果有，则提交并推送
          # '|| exit 0' 确保在没有变动时命令不会失败
          git diff --staged --quiet || (git commit -m "chore: Update ETF data" && git push)
          echo "Data commit process finished."
